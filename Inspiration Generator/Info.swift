//
//  Info.swift
//  Inspiration Generator
//
//  Created by Andreas Marsh on 3/7/21.
//

import SwiftUI

struct Info: View {
    var body: some View {
        artBackground3
            .overlay(
                VStack (alignment: .center){
                    
                    //Spacer().frame(maxHeight: 40)
                    
                    Text("Info / Help")
                        .foregroundColor(Color("lightGreen"))
                        .font(.system(.largeTitle, design: .rounded))
                        .fontWeight(.bold)
                        .shadow(color: Color("cream"), radius: 5)
                        .padding(5)
                    
                    GeometryReader { geo in
                        ScrollView {
                            Text("This application generates a 'random' image that can be used as inspiration when drawing / painting / getting creative. I love taking breaks in the midst of coding to keep the creative side of my mind active by sketching, so this app is definitly useful to me. Initially I was attempting to use the Met's open source API to load art image urls generated by random JSON parsing but that ran into many issues when attempting implementaion. The random displaying of a set of 30 images is what I ended up settling on. Simply click onto the 'Get Inspired' tab and press the 'Random 🖼' button to be given a random image to use as inspiration, or press 'Studio Ghibli' to be given 1 of 15 screenshots from Studio Ghibli movies or press 'Nature Pics 🌲' for 1 of 15 nature photos. Have fun creating! ✌️")
                                .multilineTextAlignment(.center)
                                .font(.system(size: geo.size.height > geo.size.width ? geo.size.width * 0.05: geo.size.height * 0.05))
                                .padding(10)
                        }
                    }
                    
                    Spacer()//.frame(maxHeight: 80)
                })
    }
    
    private var artBackground3: some View{
        GeometryReader { geometry in
            Image("artBackground3")
                .resizable()
                .aspectRatio(contentMode: .fill)
                .edgesIgnoringSafeArea(.all)
                .frame(width: geometry.size.width)
        }
    }
}

struct Info_Previews: PreviewProvider {
    static var previews: some View {
        Info()
    }
}
